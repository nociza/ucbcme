generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Donation {
  id             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  amount         Decimal?       @db.Decimal
  user           String?        @db.VarChar
  payment_type   PaymentType?
  payment_method PaymentMethod?
  payment_status PaymentStatus?
  customer_id    String         @unique @db.VarChar
  email          String?        @db.VarChar
  User           User?          @relation(fields: [user], references: [email], onDelete: NoAction, onUpdate: NoAction)
  name           String?        @db.VarChar
  message        String?        @db.VarChar
  honor          String?        @db.VarChar
}

model Volunteer {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  email      String?
  position   String?   @db.VarChar
  experience String?
  message    String?
  user       String?   @unique @db.Uuid
  User       User?     @relation(fields: [user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Partner {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  email      String?
  company    String?
  type       String?   @db.VarChar
  message    String?
}

model Contact {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  email      String?
  department String?   @db.VarChar
  message    String?
}

model User {
  id         String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime?   @default(now()) @db.Timestamptz(6)
  name       String?     @db.VarChar
  email      String?     @unique @db.VarChar
  is_monthly Boolean?    @default(false)
  newsletter Boolean     @default(false)
  volunteer  String?     @db.Uuid
  Donation   Donation[]
  Volunteer  Volunteer[]
}

model Creator {
  id                       String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  name                     String?
  email                    String?
  discord                  String?
  profilePhoto             String?
  twitchChannel            String?   @db.VarChar
  youtubeChannel           String?   @db.VarChar
  twitterPage              String?   @db.VarChar
  therapySessionsPaid      Int?
  therapySessionsTotal     Int?
  therapySessionsRemaining Int?
}

model CCSignup {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  discord    String?   @db.VarChar
  email      String?   @unique @db.VarChar
  twitter    String?   @db.VarChar
  platform   String?   @db.VarChar
}

model EventSignup {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  email      String?
}

model Bids {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?   @db.VarChar
  email      String?   @db.VarChar
  amount     Decimal?  @db.Decimal
  item       String?   @db.VarChar
}

enum PaymentMethod {
  STRIPE
  PAYPAL
  TWITCH
}

enum PaymentStatus {
  SUCCESS
  FAILURE
}

enum PaymentType {
  ONETIME
  MONTHLY
}

enum VolunteerPosition {
  CODING
  CLINICAL
  COMMUNITY
  EVENT
}

enum SocialMedia {
  TWITCH
  FACEBOOK
  INSTAGRAM
  YOUTUBE
  TWITTER
}
